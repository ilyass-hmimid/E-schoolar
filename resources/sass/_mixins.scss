// Mixins pour les media queries
@mixin respond-to($breakpoint) {
  @if map-has-key($breakpoints, $breakpoint) {
    @media (min-width: map-get($breakpoints, $breakpoint)) {
      @content;
    }
  } @else {
    @warn "Le breakpoint `#{$breakpoint}` n'existe pas dans la map $breakpoints.";
  }
}

// Mixin pour les boutons
@mixin button-variant($background, $border, $color: color-contrast($background)) {
  background-color: $background;
  border-color: $border;
  color: $color;

  &:hover {
    background-color: darken($background, 7.5%);
    border-color: darken($border, 10%);
    color: $color;
  }

  &:focus,
  &.focus {
    box-shadow: 0 0 0 0.2rem rgba($background, 0.5);
  }

  &.disabled,
  &:disabled {
    background-color: $background;
    border-color: $border;
  }

  &:not(:disabled):not(.disabled):active,
  &:not(:disabled):not(.disabled).active,
  .show > &.dropdown-toggle {
    background-color: darken($background, 10%);
    border-color: darken($border, 12.5%);
    color: $color;
  }
}

// Mixin pour les boutons outline
@mixin button-outline-variant($color, $color-hover: #fff) {
  color: $color;
  border-color: $color;
  background-color: transparent;

  &:hover {
    color: $color-hover;
    background-color: $color;
    border-color: $color;
  }

  &:focus,
  &.focus {
    box-shadow: 0 0 0 0.2rem rgba($color, 0.5);
  }

  &.disabled,
  &:disabled {
    color: $color;
    background-color: transparent;
  }

  &:not(:disabled):not(.disabled):active,
  &:not(:disabled):not(.disabled).active,
  .show > &.dropdown-toggle {
    color: $color-hover;
    background-color: $color;
    border-color: $color;
  }
}

// Mixin pour les cartes
@mixin card-variant($background, $border) {
  border-color: $border;

  .card-header,
  .card-footer {
    background-color: $background;
    border-color: $border;
  }
}

// Mixin pour les alertes
@mixin alert-variant($background, $border, $color) {
  color: $color;
  background-color: $background;
  border-color: $border;

  hr {
    border-top-color: darken($border, 5%);
  }

  .alert-link {
    color: darken($color, 10%);
  }
}

// Mixin pour les badges
@mixin badge-variant($bg) {
  color: color-contrast($bg);
  background-color: $bg;

  &[href] {
    @include hover-focus() {
      color: color-contrast($bg);
      text-decoration: none;
      background-color: darken($bg, 10%);
    }
  }
}

// Mixin pour les formulaires
@mixin form-control-focus() {
  &:focus {
    color: $input-focus-color;
    background-color: $input-focus-bg;
    border-color: $input-focus-border-color;
    outline: 0;
    @if $enable-shadows {
      box-shadow: $input-box-shadow, $input-focus-box-shadow;
    } @else {
      box-shadow: $input-focus-box-shadow;
    }
  }
}

// Mixin pour les transitions
@mixin transition($transition...) {
  @if length($transition) == 0 {
    $transition: $transition-base;
  }

  @if length($transition) > 1 {
    @each $value in $transition {
      @if $value == null or $value == none {
        @warn "The keyword 'none' or 'null' must be used as a single argument.";
      }
    }
  }

  @if $enable-transitions {
    @if length($transition) == 1 and (nth($transition, 1) == null or nth($transition, 1) == none) {
      transition: none;
    } @else {
      transition: $transition;
    }
  }
}

// Mixin pour les animations
@mixin animation($animation) {
  @if $enable-prefers-reduced-motion-media-query {
    @media (prefers-reduced-motion: no-preference) {
      animation: $animation;
    }
  } @else {
    animation: $animation;
  }
}

// Mixin pour les ombres
@mixin box-shadow($shadow...) {
  @if $enable-shadows {
    box-shadow: $shadow;
  }
}

// Mixin pour les bordures arrondies
@mixin border-radius($radius: $border-radius, $fallback-border-radius: false) {
  @if $enable-rounded {
    border-radius: $radius;
  }
  @else if $fallback-border-radius != false {
    border-radius: $fallback-border-radius;
  }
}

// Mixin pour le texte tronqué
@mixin text-truncate() {
  overflow: hidden;
  text-overflow: ellipsis;
  white-space: nowrap;
}

// Mixin pour le clearfix
@mixin clearfix() {
  &::after {
    display: block;
    clear: both;
    content: "";
  }
}

// Mixin pour le positionnement absolu centré
@mixin center-absolute($width: null, $height: null) {
  position: absolute;
  top: 50%;
  left: 50%;
  @if $width and $height {
    width: $width;
    height: $height;
    margin: -($height / 2) 0 0 -($width / 2);
  } @else if $width {
    width: $width;
    margin-left: -($width / 2);
    transform: translateY(-50%);
  } @else if $height {
    height: $height;
    margin-top: -($height / 2);
    transform: translateX(-50%);
  } @else {
    transform: translate(-50%, -50%);
  }
}

// Mixin pour les dégradés
@mixin gradient-x($start-color: #555, $end-color: #333, $start-percent: 0%, $end-percent: 100%) {
  background-image: linear-gradient(to right, $start-color $start-percent, $end-color $end-percent);
  background-repeat: repeat-x;
}

@mixin gradient-y($start-color: #555, $end-color: #333, $start-percent: 0%, $end-percent: 100%) {
  background-image: linear-gradient(to bottom, $start-color $start-percent, $end-color $end-percent);
  background-repeat: repeat-x;
}

// Mixin pour la gestion des états de formulaire
@mixin form-validation-state($state, $color) {
  .form-control,
  .form-select {
    .was-validated &:#{$state},
    &.is-#{$state} {
      border-color: $color;

      &:focus {
        border-color: $color;
        box-shadow: 0 0 0 $input-focus-width rgba($color, 0.25);
      }
    }
  }

  .form-check-input {
    .was-validated &:#{$state} ~ .form-check-label,
    &.is-#{$state} ~ .form-check-label {
      color: $color;
    }
  }

  .invalid-feedback,
  .valid-feedback {
    color: $color;
  }
}

// Mixin pour les grilles
@mixin make-grid-columns($columns: $grid-columns, $gutter: $grid-gutter-width, $breakpoints: $grid-breakpoints) {
  @each $breakpoint in map-keys($breakpoints) {
    $infix: breakpoint-infix($breakpoint, $breakpoints);
    
    @include media-breakpoint-up($breakpoint, $breakpoints) {
      @for $i from 1 through $columns {
        .col#{$infix}-#{$i} {
          @include make-col($i, $columns);
        }
      }
    }
  }
}

// Mixin pour les animations de chargement
@mixin spinner-border($size: 2rem, $color: $primary, $width: 0.25em) {
  display: inline-block;
  width: $size;
  height: $size;
  vertical-align: text-bottom;
  border: $width solid currentColor;
  border-right-color: transparent;
  border-radius: 50%;
  animation: spinner-border 0.75s linear infinite;
  color: $color;
}

// Mixin pour les tooltips
@mixin tooltip-variant($bg) {
  .tooltip-inner {
    background-color: $bg;
  }

  &.bs-tooltip-top .tooltip-arrow::before,
  &.bs-tooltip-auto[data-popper-placement^='top'] .tooltip-arrow::before {
    border-top-color: $bg;
  }

  &.bs-tooltip-end .tooltip-arrow::before,
  &.bs-tooltip-auto[data-popper-placement^='right'] .tooltip-arrow::before {
    border-right-color: $bg;
  }

  &.bs-tooltip-bottom .tooltip-arrow::before,
  &.bs-tooltip-auto[data-popper-placement^='bottom'] .tooltip-arrow::before {
    border-bottom-color: $bg;
  }

  &.bs-tooltip-start .tooltip-arrow::before,
  &.bs-tooltip-auto[data-popper-placement^='left'] .tooltip-arrow::before {
    border-left-color: $bg;
  }
}

// Mixin pour les popovers
@mixin popover-variant($background, $border, $color) {
  .popover-header {
    color: $color;
    background-color: $background;
    border-color: $border;
  }

  .popover-body {
    color: $color;
    background-color: $background;
  }

  &.bs-popover-top > .popover-arrow::before,
  &.bs-popover-auto[data-popper-placement^='top'] > .popover-arrow::before {
    border-top-color: $border;
  }

  &.bs-popover-top > .popover-arrow::after,
  &.bs-popover-auto[data-popper-placement^='top'] > .popover-arrow::after {
    border-top-color: $background;
  }
}

// Mixin pour les toasts
@mixin toast-variant($background, $border, $color) {
  color: $color;
  background-color: $background;
  border-color: $border;

  .toast-header {
    color: $color;
    background-color: darken($background, 5%);
    border-bottom-color: $border;
  }
}

// Mixin pour les modales
@mixin modal-variant($background, $border, $color) {
  .modal-header {
    color: $color;
    background-color: $background;
    border-bottom-color: $border;
  }

  .modal-body {
    color: $color;
    background-color: $background;
  }

  .modal-footer {
    background-color: darken($background, 5%);
    border-top-color: $border;
  }
}

// Mixin pour les listes groupées
@mixin list-group-item-variant($state, $background, $color) {
  .list-group-item-#{$state} {
    color: $color;
    background-color: $background;

    &.list-group-item-action {
      @include hover-focus() {
        color: $color;
        background-color: darken($background, 5%);
      }

      &.active {
        color: $white;
        background-color: $color;
        border-color: $color;
      }
    }
  }
}

// Mixin pour les boutons de fermeture
@mixin close-button($color: $black) {
  float: right;
  font-size: $close-font-size;
  font-weight: $close-font-weight;
  line-height: 1;
  color: $color;
  text-shadow: $close-text-shadow;
  opacity: 0.5;
  background: transparent;
  border: 0;
  padding: 0;
  cursor: pointer;

  @include hover-focus() {
    color: $color;
    text-decoration: none;
    opacity: 0.75;
  }

  // Ajoute un curseur de type main pour les éléments .close non désactivés
  &:not(:disabled):not(.disabled) {
    cursor: pointer;
  }
}

// Mixin pour les notifications
@mixin notification-variant($background, $border, $color) {
  background-color: $background;
  border-color: $border;
  color: $color;
  
  .notification-close {
    color: $color;
    opacity: 0.8;
    
    &:hover, &:focus {
      color: $color;
      opacity: 1;
    }
  }
  
  .notification-title {
    color: $color;
  }
  
  .notification-message {
    color: rgba($color, 0.9);
  }
  
  .notification-icon {
    color: $color;
  }
}

// Mixin pour les cartes de profil
@mixin profile-card-variant($background, $border, $color) {
  background-color: $background;
  border-color: $border;
  color: $color;
  
  .profile-cover {
    background-color: darken($background, 5%);
  }
  
  .profile-avatar {
    border-color: $background;
  }
  
  .profile-name {
    color: $color;
  }
  
  .profile-title {
    color: rgba($color, 0.8);
  }
  
  .profile-stats {
    border-top-color: rgba($border, 0.2);
    
    .stat {
      color: $color;
      
      .stat-label {
        color: rgba($color, 0.7);
      }
    }
  }
}

// Mixin pour les avatars
@mixin avatar($size, $font-size: null, $border-radius: 50%) {
  width: $size;
  height: $size;
  border-radius: $border-radius;
  display: inline-flex;
  align-items: center;
  justify-content: center;
  background-color: $gray-200;
  color: $gray-700;
  font-weight: $font-weight-semibold;
  overflow: hidden;
  position: relative;
  flex-shrink: 0;
  
  @if $font-size {
    font-size: $font-size;
  } @else {
    font-size: $size * 0.4;
  }
  
  img {
    width: 100%;
    height: 100%;
    object-fit: cover;
  }
  
  .avatar-status {
    position: absolute;
    right: 0;
    bottom: 0;
    width: 20%;
    height: 20%;
    border-radius: 50%;
    border: 2px solid $white;
  }
  
  &.avatar-sm {
    width: $size * 0.75;
    height: $size * 0.75;
    font-size: $size * 0.3;
  }
  
  &.avatar-lg {
    width: $size * 1.5;
    height: $size * 1.5;
    font-size: $size * 0.5;
  }
  
  &.avatar-xl {
    width: $size * 2;
    height: $size * 2;
    font-size: $size * 0.7;
  }
}

// Mixin pour les badges de statut
@mixin status-badge($size: 0.5rem, $status: 'online', $position: null) {
  position: relative;
  
  &::after {
    content: '';
    position: absolute;
    width: $size;
    height: $size;
    border-radius: 50%;
    border: 1px solid $white;
    
    @if $status == 'online' {
      background-color: $success;
    } @else if $status == 'away' {
      background-color: $warning;
    } @else if $status == 'busy' {
      background-color: $danger;
    } @else if $status == 'offline' {
      background-color: $gray-500;
    } @else {
      background-color: $status;
    }
    
    @if $position == 'top-right' {
      top: 0;
      right: 0;
      transform: translate(25%, -25%);
    } @else if $position == 'bottom-right' {
      bottom: 0;
      right: 0;
      transform: translate(25%, 25%);
    } @else if $position == 'top-left' {
      top: 0;
      left: 0;
      transform: translate(-25%, -25%);
    } @else if $position == 'bottom-left' {
      bottom: 0;
      left: 0;
      transform: translate(-25%, 25%);
    } @else {
      bottom: 0;
      right: 0;
      transform: translate(25%, 25%);
    }
  }
}

// Mixin pour les icônes avec badge
@mixin icon-with-badge($icon-size: 1.5rem, $badge-size: 1rem, $badge-offset: -0.25rem) {
  position: relative;
  display: inline-flex;
  align-items: center;
  justify-content: center;
  width: $icon-size;
  height: $icon-size;
  
  .badge {
    position: absolute;
    top: $badge-offset;
    right: $badge-offset;
    min-width: $badge-size;
    height: $badge-size;
    border-radius: $badge-size;
    display: flex;
    align-items: center;
    justify-content: center;
    font-size: 0.6rem;
    padding: 0 0.25rem;
    transform: scale(1);
    transition: transform 0.2s ease;
    
    &.pulse {
      animation: pulse 1.5s infinite;
    }
  }
  
  &:hover .badge {
    transform: scale(1.1);
  }
}

// Mixin pour les cartes de statistiques
@mixin stats-card-variant($background, $border, $color) {
  background-color: $background;
  border-color: $border;
  color: $color;
  transition: transform 0.2s, box-shadow 0.2s;
  
  &:hover {
    transform: translateY(-2px);
    box-shadow: 0 4px 15px rgba($black, 0.1);
  }
  
  .stat-icon {
    color: $color;
    opacity: 0.8;
  }
  
  .stat-value {
    color: $color;
    font-size: 1.5rem;
    font-weight: $font-weight-bold;
    line-height: 1.2;
  }
  
  .stat-label {
    color: rgba($color, 0.8);
    font-size: 0.875rem;
    text-transform: uppercase;
    letter-spacing: 0.5px;
  }
  
  .stat-change {
    display: inline-flex;
    align-items: center;
    font-size: 0.75rem;
    font-weight: $font-weight-semibold;
    
    &.positive {
      color: $success;
    }
    
    &.negative {
      color: $danger;
    }
    
    i {
      margin-right: 0.25rem;
    }
  }
}

// Mixin pour les cartes de progression
@mixin progress-card-variant($background, $border, $color) {
  @include stats-card-variant($background, $border, $color);
  
  .progress {
    height: 4px;
    background-color: rgba($color, 0.2);
    margin: 0.75rem 0;
    overflow: visible;
    
    .progress-bar {
      background-color: $color;
      position: relative;
      
      &::after {
        content: '';
        position: absolute;
        right: 0;
        top: 50%;
        transform: translate(50%, -50%);
        width: 12px;
        height: 12px;
        border-radius: 50%;
        background-color: $color;
        border: 2px solid $white;
      }
    }
  }
  
  .progress-stats {
    display: flex;
    justify-content: space-between;
    font-size: 0.75rem;
    color: rgba($color, 0.8);
  }
}

// Mixin pour les cartes de statut
@mixin status-card-variant($background, $border, $color) {
  background-color: $background;
  border-color: $border;
  color: $color;
  border-left-width: 3px;
  border-left-style: solid;
  
  .status-title {
    color: $color;
    font-weight: $font-weight-semibold;
    margin-bottom: 0.25rem;
  }
  
  .status-value {
    font-size: 1.5rem;
    font-weight: $font-weight-bold;
    line-height: 1.2;
  }
  
  .status-icon {
    font-size: 2rem;
    opacity: 0.2;
    position: absolute;
    right: 1rem;
    top: 50%;
    transform: translateY(-50%);
  }
}

// Mixin pour les cartes utilisateur
@mixin user-card-variant($background, $border, $color) {
  background-color: $background;
  border-color: $border;
  color: $color;
  transition: transform 0.2s, box-shadow 0.2s;
  
  &:hover {
    transform: translateY(-2px);
    box-shadow: 0 4px 15px rgba($black, 0.1);
  }
  
  .user-avatar {
    border: 3px solid $white;
    box-shadow: 0 2px 10px rgba($black, 0.1);
  }
  
  .user-name {
    color: $color;
    font-weight: $font-weight-semibold;
    margin: 0.5rem 0 0.25rem;
  }
  
  .user-title {
    color: rgba($color, 0.7);
    font-size: 0.875rem;
    margin-bottom: 1rem;
  }
  
  .user-stats {
    display: flex;
    justify-content: space-around;
    border-top: 1px solid rgba($border, 0.5);
    padding-top: 1rem;
    
    .stat {
      text-align: center;
      
      .stat-value {
        display: block;
        font-weight: $font-weight-bold;
        color: $color;
      }
      
      .stat-label {
        display: block;
        font-size: 0.75rem;
        color: rgba($color, 0.7);
        text-transform: uppercase;
        letter-spacing: 0.5px;
      }
    }
  }
}
