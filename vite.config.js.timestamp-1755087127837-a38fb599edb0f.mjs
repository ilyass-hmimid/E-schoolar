// vite.config.js
import { defineConfig, loadEnv } from "file:///C:/Users/admin/Desktop/Allo%20Tawjih/e-schoolar/node_modules/vite/dist/node/index.js";
import laravel from "file:///C:/Users/admin/Desktop/Allo%20Tawjih/e-schoolar/node_modules/laravel-vite-plugin/dist/index.mjs";
import vue from "file:///C:/Users/admin/Desktop/Allo%20Tawjih/e-schoolar/node_modules/@vitejs/plugin-vue/dist/index.mjs";
var vite_config_default = defineConfig(({ mode }) => {
  const env = loadEnv(mode, process.cwd(), "");
  return {
    plugins: [
      laravel({
        input: [
          "resources/css/app.css",
          "resources/js/app.js"
        ],
        refresh: true
      }),
      vue({
        template: {
          transformAssetUrls: {
            base: null,
            includeAbsolute: false
          }
        }
      })
    ],
    // Définir les variables d'environnement accessibles côté client
    define: {
      "process.env": {
        VITE_APP_NAME: JSON.stringify(env.VITE_APP_NAME || "Allo Tawjih"),
        VITE_PUSHER_APP_KEY: JSON.stringify(env.VITE_PUSHER_APP_KEY || ""),
        VITE_PUSHER_HOST: JSON.stringify(env.VITE_PUSHER_HOST || ""),
        VITE_PUSHER_PORT: JSON.stringify(env.VITE_PUSHER_PORT || "443"),
        VITE_PUSHER_SCHEME: JSON.stringify(env.VITE_PUSHER_SCHEME || "https"),
        VITE_PUSHER_APP_CLUSTER: JSON.stringify(env.VITE_PUSHER_APP_CLUSTER || "eu")
      }
    },
    // Configuration du serveur de développement
    server: {
      hmr: {
        host: "localhost"
      }
    }
  };
});
export {
  vite_config_default as default
};
//# sourceMappingURL=data:application/json;base64,ewogICJ2ZXJzaW9uIjogMywKICAic291cmNlcyI6IFsidml0ZS5jb25maWcuanMiXSwKICAic291cmNlc0NvbnRlbnQiOiBbImNvbnN0IF9fdml0ZV9pbmplY3RlZF9vcmlnaW5hbF9kaXJuYW1lID0gXCJDOlxcXFxVc2Vyc1xcXFxhZG1pblxcXFxEZXNrdG9wXFxcXEFsbG8gVGF3amloXFxcXGUtc2Nob29sYXJcIjtjb25zdCBfX3ZpdGVfaW5qZWN0ZWRfb3JpZ2luYWxfZmlsZW5hbWUgPSBcIkM6XFxcXFVzZXJzXFxcXGFkbWluXFxcXERlc2t0b3BcXFxcQWxsbyBUYXdqaWhcXFxcZS1zY2hvb2xhclxcXFx2aXRlLmNvbmZpZy5qc1wiO2NvbnN0IF9fdml0ZV9pbmplY3RlZF9vcmlnaW5hbF9pbXBvcnRfbWV0YV91cmwgPSBcImZpbGU6Ly8vQzovVXNlcnMvYWRtaW4vRGVza3RvcC9BbGxvJTIwVGF3amloL2Utc2Nob29sYXIvdml0ZS5jb25maWcuanNcIjtpbXBvcnQgeyBkZWZpbmVDb25maWcsIGxvYWRFbnYgfSBmcm9tICd2aXRlJztcbmltcG9ydCBsYXJhdmVsIGZyb20gJ2xhcmF2ZWwtdml0ZS1wbHVnaW4nO1xuaW1wb3J0IHZ1ZSBmcm9tICdAdml0ZWpzL3BsdWdpbi12dWUnO1xuXG5leHBvcnQgZGVmYXVsdCBkZWZpbmVDb25maWcoKHsgbW9kZSB9KSA9PiB7XG4gICAgLy8gQ2hhcmdlciBsZXMgdmFyaWFibGVzIGQnZW52aXJvbm5lbWVudFxuICAgIGNvbnN0IGVudiA9IGxvYWRFbnYobW9kZSwgcHJvY2Vzcy5jd2QoKSwgJycpO1xuICAgIFxuICAgIHJldHVybiB7XG4gICAgICAgIHBsdWdpbnM6IFtcbiAgICAgICAgICAgIGxhcmF2ZWwoe1xuICAgICAgICAgICAgICAgIGlucHV0OiBbXG4gICAgICAgICAgICAgICAgICAgICdyZXNvdXJjZXMvY3NzL2FwcC5jc3MnLFxuICAgICAgICAgICAgICAgICAgICAncmVzb3VyY2VzL2pzL2FwcC5qcycsXG4gICAgICAgICAgICAgICAgXSxcbiAgICAgICAgICAgICAgICByZWZyZXNoOiB0cnVlLFxuICAgICAgICAgICAgfSksXG4gICAgICAgICAgICB2dWUoe1xuICAgICAgICAgICAgICAgIHRlbXBsYXRlOiB7XG4gICAgICAgICAgICAgICAgICAgIHRyYW5zZm9ybUFzc2V0VXJsczoge1xuICAgICAgICAgICAgICAgICAgICAgICAgYmFzZTogbnVsbCxcbiAgICAgICAgICAgICAgICAgICAgICAgIGluY2x1ZGVBYnNvbHV0ZTogZmFsc2UsXG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9KSxcbiAgICAgICAgXSxcbiAgICAgICAgLy8gRFx1MDBFOWZpbmlyIGxlcyB2YXJpYWJsZXMgZCdlbnZpcm9ubmVtZW50IGFjY2Vzc2libGVzIGNcdTAwRjR0XHUwMEU5IGNsaWVudFxuICAgICAgICBkZWZpbmU6IHtcbiAgICAgICAgICAgICdwcm9jZXNzLmVudic6IHtcbiAgICAgICAgICAgICAgICBWSVRFX0FQUF9OQU1FOiBKU09OLnN0cmluZ2lmeShlbnYuVklURV9BUFBfTkFNRSB8fCAnQWxsbyBUYXdqaWgnKSxcbiAgICAgICAgICAgICAgICBWSVRFX1BVU0hFUl9BUFBfS0VZOiBKU09OLnN0cmluZ2lmeShlbnYuVklURV9QVVNIRVJfQVBQX0tFWSB8fCAnJyksXG4gICAgICAgICAgICAgICAgVklURV9QVVNIRVJfSE9TVDogSlNPTi5zdHJpbmdpZnkoZW52LlZJVEVfUFVTSEVSX0hPU1QgfHwgJycpLFxuICAgICAgICAgICAgICAgIFZJVEVfUFVTSEVSX1BPUlQ6IEpTT04uc3RyaW5naWZ5KGVudi5WSVRFX1BVU0hFUl9QT1JUIHx8ICc0NDMnKSxcbiAgICAgICAgICAgICAgICBWSVRFX1BVU0hFUl9TQ0hFTUU6IEpTT04uc3RyaW5naWZ5KGVudi5WSVRFX1BVU0hFUl9TQ0hFTUUgfHwgJ2h0dHBzJyksXG4gICAgICAgICAgICAgICAgVklURV9QVVNIRVJfQVBQX0NMVVNURVI6IEpTT04uc3RyaW5naWZ5KGVudi5WSVRFX1BVU0hFUl9BUFBfQ0xVU1RFUiB8fCAnZXUnKSxcbiAgICAgICAgICAgIH1cbiAgICAgICAgfSxcbiAgICAgICAgLy8gQ29uZmlndXJhdGlvbiBkdSBzZXJ2ZXVyIGRlIGRcdTAwRTl2ZWxvcHBlbWVudFxuICAgICAgICBzZXJ2ZXI6IHtcbiAgICAgICAgICAgIGhtcjoge1xuICAgICAgICAgICAgICAgIGhvc3Q6ICdsb2NhbGhvc3QnLFxuICAgICAgICAgICAgfSxcbiAgICAgICAgfSxcbiAgICB9O1xufSk7XG4iXSwKICAibWFwcGluZ3MiOiAiO0FBQXVVLFNBQVMsY0FBYyxlQUFlO0FBQzdXLE9BQU8sYUFBYTtBQUNwQixPQUFPLFNBQVM7QUFFaEIsSUFBTyxzQkFBUSxhQUFhLENBQUMsRUFBRSxLQUFLLE1BQU07QUFFdEMsUUFBTSxNQUFNLFFBQVEsTUFBTSxRQUFRLElBQUksR0FBRyxFQUFFO0FBRTNDLFNBQU87QUFBQSxJQUNILFNBQVM7QUFBQSxNQUNMLFFBQVE7QUFBQSxRQUNKLE9BQU87QUFBQSxVQUNIO0FBQUEsVUFDQTtBQUFBLFFBQ0o7QUFBQSxRQUNBLFNBQVM7QUFBQSxNQUNiLENBQUM7QUFBQSxNQUNELElBQUk7QUFBQSxRQUNBLFVBQVU7QUFBQSxVQUNOLG9CQUFvQjtBQUFBLFlBQ2hCLE1BQU07QUFBQSxZQUNOLGlCQUFpQjtBQUFBLFVBQ3JCO0FBQUEsUUFDSjtBQUFBLE1BQ0osQ0FBQztBQUFBLElBQ0w7QUFBQTtBQUFBLElBRUEsUUFBUTtBQUFBLE1BQ0osZUFBZTtBQUFBLFFBQ1gsZUFBZSxLQUFLLFVBQVUsSUFBSSxpQkFBaUIsYUFBYTtBQUFBLFFBQ2hFLHFCQUFxQixLQUFLLFVBQVUsSUFBSSx1QkFBdUIsRUFBRTtBQUFBLFFBQ2pFLGtCQUFrQixLQUFLLFVBQVUsSUFBSSxvQkFBb0IsRUFBRTtBQUFBLFFBQzNELGtCQUFrQixLQUFLLFVBQVUsSUFBSSxvQkFBb0IsS0FBSztBQUFBLFFBQzlELG9CQUFvQixLQUFLLFVBQVUsSUFBSSxzQkFBc0IsT0FBTztBQUFBLFFBQ3BFLHlCQUF5QixLQUFLLFVBQVUsSUFBSSwyQkFBMkIsSUFBSTtBQUFBLE1BQy9FO0FBQUEsSUFDSjtBQUFBO0FBQUEsSUFFQSxRQUFRO0FBQUEsTUFDSixLQUFLO0FBQUEsUUFDRCxNQUFNO0FBQUEsTUFDVjtBQUFBLElBQ0o7QUFBQSxFQUNKO0FBQ0osQ0FBQzsiLAogICJuYW1lcyI6IFtdCn0K
