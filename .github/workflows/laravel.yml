name: Laravel CI

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  laravel-tests:
    runs-on: ubuntu-latest
    services:
      mysql:
        image: mysql:8.0
        env:
          MYSQL_ROOT_PASSWORD: root
          MYSQL_DATABASE: laravel
          MYSQL_USER: laravel
          MYSQL_PASSWORD: password
        ports:
          - "3306"
        options: >-
          --health-cmd="mysqladmin ping"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=3

    steps:
    - uses: actions/checkout@v3

    - name: Setup PHP
      uses: shivammathur/setup-php@v2
      with:
        php-version: '8.1'
        extensions: dom, curl, libxml, mbstring, zip, ctype, json, tokenizer, xml, pdo, pdo_mysql, fileinfo, gd, intl, openssl, pcntl, pdo_sqlite, sqlite3, mysqlnd
        coverage: xdebug

    - name: Copy .env
      run: php -r "file_exists('.env') || copy('.env.example', '.env');"

    - name: Install Dependencies
      run: |
        composer install -q --no-ansi --no-interaction --no-scripts --no-progress --prefer-dist
        npm install

    - name: Generate key
      run: php artisan key:generate

    - name: Directory Permissions
      run: chmod -R 777 storage bootstrap/cache

    - name: Create Database
      run: |
        mkdir -p database
        touch database/database.sqlite

    - name: Execute tests (Unit and Feature tests) via PHPUnit
      env:
        DB_CONNECTION: sqlite
        DB_DATABASE: database/database.sqlite
        DB_FOREIGN_KEYS: true
      run: |
        php artisan config:clear
        php artisan migrate --env=testing --force
        php artisan db:seed --class=TestDatabaseSeeder
        php artisan test --testsuite=Unit --stop-on-failure
        php artisan test --testsuite=Feature --stop-on-failure

    - name: Execute Dusk tests
      env:
        DB_CONNECTION: sqlite
        DB_DATABASE: database/database.sqlite
        APP_ENV: testing
        APP_KEY: base64:r0w0pOGrmSxOXg1mJBNBaMMCtL5fjvGbQPR0IMmRSDk=
        APP_DEBUG: true
        APP_URL: http://127.0.0.1:8000
        SESSION_DRIVER: file
        SESSION_LIFETIME: 120
        MAIL_MAILER: log
        QUEUE_CONNECTION: sync
      run: |
        php artisan dusk --stop-on-failure

    - name: Upload test coverage
      uses: codecov/codecov-action@v3
      with:
        token: ${{ secrets.CODECOV_TOKEN }}
        file: ./coverage.xml
        flags: unittests
        name: codecov-umbrella
        fail_ci_if_error: false
        verbose: true
        directory: coverage

    - name: Deploy to production
      if: github.ref == 'refs/heads/main' && !contains(github.event.head_commit.message, '[skip ci]')
      run: |
        echo "Deploying to production..."
        # Add your deployment commands here
        # For example:
        # ssh user@server "cd /path/to/app && git pull origin main && composer install --no-dev"
        # php artisan migrate --force
        # php artisan optimize:clear
        # php artisan optimize
      env:
        DEPLOY_TOKEN: ${{ secrets.DEPLOY_TOKEN }}
